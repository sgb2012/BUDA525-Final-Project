```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

Read in the data
```{r cache = TRUE}
#data<- read.table(file.choose(),sep="\t",header=T)

##first set path to /group/bprice5
### Image of how to
data<- read.csv("/group/bprice5/1314C-08.CSV",header=T)
head(data)
dim(data)
```
Install packages that includes the rescale function
```{r}
install.packages("scales")
library(scales)

install.packages("gsubfn")
library(gsubfn)

```

The academic achievement variables from the data are:
```{r}
#HIGH.SCHOOL.GPA
#PREVIOUS.COLL.GPA
#HIGHEST.ACT.SUM.OF.STANDARD.SCORES
#SAT.TOTAL..HIGHEST.SMV.
#GED.SCORE

#Not all of these variables are ready for analysis, so this section will work on checking through each academic achievement variable and getting them ready.

#HIGH.SCHOOL.GPA
#go ahead and Weight the Unweighted HIGH.SCHOOL.GPAs from 0 to 5.0 instead of 0 to 4.0 while referencing WEIGHTED.GPA.IND variable.
data$HIGH.SCHOOL.GPA.EVENED <- ifelse((data$WEIGHTED.GPA.IND=="NW") & (data$HIGH.SCHOOL.GPA                             <=4), data$HIGH.SCHOOL.GPA * 1.25,
                          ifelse(data$WEIGHTED.GPA.IND=="W",data$HIGH.SCHOOL.GPA * 1,
                          NA  ))
summary(data$HIGH.SCHOOL.GPA.EVENED)

#PREVIOUS.COLL.GPA
#Need to mark the values that are greater than 4.0 as NA.  This is invalid information.
data$PREVIOUS.COLL.GPA.TRIMMED <- ifelse((data$PREVIOUS.COLL.GPA > 4),NA,data$PREVIOUS.COLL.GPA)
summary(data$PREVIOUS.COLL.GPA.TRIMMED)

#HIGHEST.ACT.SUM.OF.STANDARD.SCORES
summary(data$HIGHEST.ACT.SUM.OF.STANDARD.SCORES)

#SAT.TOTAL..HIGHEST.SMV.
summary(data$SAT.TOTAL..HIGHEST.SMV.)

#GED.SCORE
#remove the "G" from GED.SCORE to create a numeric value for scaling
data$GED.SCORE.NUMERIC <- gsub("G","",data$GED.SCORE)
data$GED.SCORE.NUMERIC <- as.numeric(as.character(data$GED.SCORE.NUMERIC))
summary(data$GED.SCORE.NUMERIC) # worked.  Values 0 to 75.



#The 5 academic variables that we will use are:
#HIGH.SCHOOL.GPA.EVENED - Values 1.25 to 5.00
#PREVIOUS.COLL.GPA.TRIMMED - Values 0.00 to 4.00
#HIGHEST.ACT.SUM.OF.STANDARD.SCORES - Values 33 to 142
#SAT.TOTAL..HIGHEST.SMV. - Values 305 to 1600
#GED.SCORE.NUMERIC - Values 0 to 75.
```


Now that we have the 4 academic achievement variables formatted properly, we can scale the academic variables from 0 to 100 to create an even scale.
```{r}
data$HIGH.SCHOOL.GPA.PERCENTILE<-rescale(data$HIGH.SCHOOL.GPA.EVENED, to = c(0,100))
data$PREVIOUS.COLL.GPA.PERCENTILE<-rescale(data$PREVIOUS.COLL.GPA.TRIMMED, to = c(0,100))
data$HIGHEST.ACT.SUM.OF.STANDARD.SCORES.PERCENTILE<-rescale(data$HIGHEST.ACT.SUM.OF.STANDARD.SCORES, to = c(0,100))
data$SAT.TOTAL..HIGHEST.SMV.PERCENTILE<-rescale(data$SAT.TOTAL..HIGHEST.SMV., to = c(0,100))
data$GED.SCORE.PERCENTILE <- rescale(data$GED.SCORE.NUMERIC, to = c(0,100))
```


The 5 academic achievement variables are now on each shown on a percentile scale of 0 to 100. Now we just need to get the (count of which 5 academic variables in each row are not NA) and use this to divide the (sum of the 5 academic variables in each row) to create the SCALED.ACADEMIC.ACHIEVEMENT variable that will be between 0 to 100 for each student.
```{r}
# First Sum the 5 variables together
data$SUM.ACADEMIC.ACHIEVEMENT.VARS <- rowSums(data[, c("HIGH.SCHOOL.GPA.PERCENTILE", "PREVIOUS.COLL.GPA.PERCENTILE", "HIGHEST.ACT.SUM.OF.STANDARD.SCORES.PERCENTILE", "SAT.TOTAL..HIGHEST.SMV.PERCENTILE", "GED.SCORE.PERCENTILE")], na.rm = TRUE)
summary(data$SUM.ACADEMIC.ACHIEVEMENT.VARS)

#Second get a count of NAs within the 5 variables by row.
data$COUNT.NA <- rowSums(is.na(data[, c("HIGH.SCHOOL.GPA.PERCENTILE", "PREVIOUS.COLL.GPA.PERCENTILE", "HIGHEST.ACT.SUM.OF.STANDARD.SCORES.PERCENTILE", "SAT.TOTAL..HIGHEST.SMV.PERCENTILE", "GED.SCORE.PERCENTILE")]))
summary(data$COUNT.NA)

#Create the SCALED.ACADEMIC.ACHIEVEMENT variable
data$SCALED.ACADEMIC.ACHIEVEMENT <- data$SUM.ACADEMIC.ACHIEVEMENT.VARS / (5 - data$COUNT.NA)
summary(data$SCALED.ACADEMIC.ACHIEVEMENT)

```




Now deal with the blank values and NA's on Academic Achievement variables within the "data" dataset so that we can use these if needed.
```{r}
data$HIGH.SCHOOL.GPA.NA <- is.na(data$HIGH.SCHOOL.GPA)
data$PREVIOUS.COLL.GPA.NA <- is.na(data$PREVIOUS.COLL.GPA)
data$HIGHEST.ACT.SUM.OF.STANDARD.SCORES.NA <- is.na(data$HIGHEST.ACT.SUM.OF.STANDARD.SCORES)
data$SAT.TOTAL..HIGHEST.SMV..NA <- is.na(data$SAT.TOTAL..HIGHEST.SMV.)
data$GED.SCORE.NA <- is.na(data$GED.SCORE)

data$HIGH.SCHOOL.GPA[is.na(data$HIGH.SCHOOL.GPA)] = 0
data$PREVIOUS.COLL.GPA[is.na(data$PREVIOUS.COLL.GPA)] = 0
data$HIGHEST.ACT.SUM.OF.STANDARD.SCORES[is.na(data$HIGHEST.ACT.SUM.OF.STANDARD.SCORES)] = 0
data$SAT.TOTAL..HIGHEST.SMV.[is.na(data$SAT.TOTAL..HIGHEST.SMV.)] = 0
data$GED.SCORE[is.na(data$GED.SCORE)] = 0
```
