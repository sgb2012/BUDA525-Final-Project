```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

Read in the data
```{r}
#data<- read.table(file.choose(),sep="\t",header=T)

##first set path to /group/bprice5
### Image of how to
data<- read.csv("/group/bprice5/1314C-08.CSV",header=T)
head(data)
dim(data)
```
Install packages that includes the rescale function
```{r}
install.packages("scales")
library(scales)

install.packages("gsubfn")
library(gsubfn)
```

The academic achievement variables from the data are:
```{r}
#HIGH.SCHOOL.GPA
#PREVIOUS.COLL.GPA
#HIGHEST.ACT.SUM.OF.STANDARD.SCORES
#SAT.TOTAL..HIGHEST.SMV.
#GED.SCORE

#Not all of these variables are ready for analysis, so this section will work on getting them ready.

#HIGH.SCHOOL.GPA
#go ahead and Weight the Unweighted HIGH.SCHOOL.GPAs from 0 to 5.0 instead of 0 to 4.0 while referencing WEIGHTED.GPA.IND variable.
data$HIGH.SCHOOL.GPA.EVENED <- ifelse((data$WEIGHTED.GPA.IND=="NW") & (data$HIGH.SCHOOL.GPA                             <=4), data$HIGH.SCHOOL.GPA * 1.25,
                          ifelse(data$WEIGHTED.GPA.IND=="W",data$HIGH.SCHOOL.GPA * 1,
                          NA  ))
summary(data$HIGH.SCHOOL.GPA.EVENED)

#PREVIOUS.COLL.GPA
#Need to mark the values that are greater than 5.0 as NA.  This is invalid information.


summary(data$PREVIOUS.COLL.GPA.TRIMMED)




#remove the "G" from GED.SCORE to create a numeric value for scaling
data$GED.SCORE.NUMERIC <- gsub("G","",data$GED.SCORE)
data$GED.SCORE.NUMERIC <- as.numeric(as.character(data$GED.SCORE.NUMERIC))
summary(data$GED.SCORE.NUMERIC) # worked.  Values 0 to 75.



#The 5 academic variables that we will use are:
#HIGH.SCHOOL.GPA.EVENED - Values 1.25 to 5.00
#PREVIOUS.COLL.GPA
#HIGHEST.ACT.SUM.OF.STANDARD.SCORES
#SAT.TOTAL..HIGHEST.SMV.
#GED.SCORE - Values 0 to 75.
```


Scale the academic variables from 0 to 100 before blank values are dealt with.
```{r}
data$WEIGHTED.GPA.IND.PERCENTILE<-rescale(data$WEIGHTED.GPA.IND, to = c(0,100)) #works
data$HIGH.SCHOOL.GPA.PERCENTILE<-rescale(data$HIGH.SCHOOL.GPA, to = c(0,100)) #works - but 0 to 5
data$PREVIOUS.COLL.GPA.PERCENTILE<-rescale(data$PREVIOUS.COLL.GPA, to = c(0,100)) #works
data$HIGHEST.ACT.SUM.OF.STANDARD.SCORES.PERCENTILE<-rescale(data$HIGHEST.ACT.SUM.OF.STANDARD.SCORES, to = c(0,100))#works
data$SAT.TOTAL..HIGHEST.SMV.PERCENTILE<-rescale(data$SAT.TOTAL..HIGHEST.SMV., to = c(0,100))
data$GED.SCORE.PERCENTILE <- rescale(data$GED.SCORE, to = c(0,100)) #may need to complete as factor
```


#Now deal with the blank values and NA's on Academic Achievement variables within the "data" dataset
```{r}
data$WEIGHTED.GPA.IND.NA <- is.na(data$WEIGHTED.GPA.IND)
data$HIGH.SCHOOL.GPA.NA <- is.na(data$HIGH.SCHOOL.GPA)
data$PREVIOUS.COLL.GPA.NA <- is.na(data$PREVIOUS.COLL.GPA)
data$HIGHEST.ACT.SUM.OF.STANDARD.SCORES.NA <- is.na(data$HIGHEST.ACT.SUM.OF.STANDARD.SCORES)
data$SAT.TOTAL..HIGHEST.SMV..NA <- is.na(data$SAT.TOTAL..HIGHEST.SMV.)
data$GED.SCORE.NA <- is.na(data$GED.SCORE)

data$WEIGHTED.GPA.IND[is.na(data$WEIGHTED.GPA.IND)] = 0
data$HIGH.SCHOOL.GPA[is.na(data$HIGH.SCHOOL.GPA)] = 0
data$PREVIOUS.COLL.GPA[is.na(data$PREVIOUS.COLL.GPA)] = 0
data$HIGHEST.ACT.SUM.OF.STANDARD.SCORES[is.na(data$HIGHEST.ACT.SUM.OF.STANDARD.SCORES)] = 0
data$SAT.TOTAL..HIGHEST.SMV.[is.na(data$SAT.TOTAL..HIGHEST.SMV.)] = 0
data$GED.SCORE[is.na(data$GED.SCORE)] = 0
```
